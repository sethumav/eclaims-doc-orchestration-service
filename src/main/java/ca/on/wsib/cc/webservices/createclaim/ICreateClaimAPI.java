package ca.on.wsib.cc.webservices.createclaim;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.10
 * 2018-03-22T13:23:31.305-04:00
 * Generated source version: 3.1.10
 * 
 */
@WebServiceClient(name = "ICreateClaimAPI", 
                  wsdlLocation = "file:/C:/Users/shirans/Development/SpringInt/WS_CXF_demo/src/main/resources/wsdl/ICreateClaimAPI.wsdl",
                  targetNamespace = "http://wsib.on.ca/cc/webservices/createclaim/kofax/service") 
public class ICreateClaimAPI extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://wsib.on.ca/cc/webservices/createclaim/kofax/service", "ICreateClaimAPI");
    public final static QName ICreateClaimAPISoap11Port = new QName("http://wsib.on.ca/cc/webservices/createclaim/kofax/service", "ICreateClaimAPISoap11Port");
    public final static QName ICreateClaimAPISoap12Port = new QName("http://wsib.on.ca/cc/webservices/createclaim/kofax/service", "ICreateClaimAPISoap12Port");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Users/shirans/Development/SpringInt/WS_CXF_demo/src/main/resources/wsdl/ICreateClaimAPI.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ICreateClaimAPI.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/C:/Users/shirans/Development/SpringInt/WS_CXF_demo/src/main/resources/wsdl/ICreateClaimAPI.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ICreateClaimAPI(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ICreateClaimAPI(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ICreateClaimAPI() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ICreateClaimAPI(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ICreateClaimAPI(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ICreateClaimAPI(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ICreateClaimAPIPortType
     */
    @WebEndpoint(name = "ICreateClaimAPISoap11Port")
    public ICreateClaimAPIPortType getICreateClaimAPISoap11Port() {
        return super.getPort(ICreateClaimAPISoap11Port, ICreateClaimAPIPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICreateClaimAPIPortType
     */
    @WebEndpoint(name = "ICreateClaimAPISoap11Port")
    public ICreateClaimAPIPortType getICreateClaimAPISoap11Port(WebServiceFeature... features) {
        return super.getPort(ICreateClaimAPISoap11Port, ICreateClaimAPIPortType.class, features);
    }


    /**
     *
     * @return
     *     returns ICreateClaimAPIPortType
     */
    @WebEndpoint(name = "ICreateClaimAPISoap12Port")
    public ICreateClaimAPIPortType getICreateClaimAPISoap12Port() {
        return super.getPort(ICreateClaimAPISoap12Port, ICreateClaimAPIPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ICreateClaimAPIPortType
     */
    @WebEndpoint(name = "ICreateClaimAPISoap12Port")
    public ICreateClaimAPIPortType getICreateClaimAPISoap12Port(WebServiceFeature... features) {
        return super.getPort(ICreateClaimAPISoap12Port, ICreateClaimAPIPortType.class, features);
    }

}
